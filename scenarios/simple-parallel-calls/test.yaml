- vars:
    functions: file://scenarios/simple-parallel-calls/functions.md
    message: file://scenarios/simple-parallel-calls/questions/00-get-profile.md
    expected:
      calls:
        - function: crm_get_customer
          parameters:
            customer_id: CUST-789
        - function: billing_get_invoices
          parameters:
            customer_id: CUST-789
        - function: support_get_tickets
          parameters:
            customer_id: CUST-789
  assert:
    - type: javascript
      value: file://scripts/utilities.js:findFunctionCalls
    - type: javascript
      value: file://scripts/utilities.js:findFunctionOutputs
    - type: javascript
      value: file://scripts/utilities.js:matchFunctionCalls
  metadata:
    conversationId: simple-parallel-calls
    parameters:
      - [function-calling]
      - [no-hallucination]
      - [function-discovery, function-selection, parameter-transformation]
    context: "The user requests a complete profile, which requires fetching data from three separate systems. The model should identify that these calls can be made in parallel."
- vars:
    functions: file://scenarios/simple-parallel-calls/functions.md
    message: file://scenarios/simple-parallel-calls/outputs/00-partial-results.md
    raw: true
  assert:
    - type: javascript
      value: file://scripts/utilities.js:findFunctionCalls
    - type: javascript
      value: file://scripts/utilities.js:findFunctionOutputs
    - type: llm-rubric
      value: The response must indicate somehow that it the model is waiting for a function call to complete, with bonus points if it includes a partial summary based on the outputs received so far.
  metadata:
    conversationId: simple-parallel-calls
    parameters:
      - [] # it might retry the missing call, which is not entirely wrong.
      - [no-hallucination]
      - [parallel-calling, context-understanding]
    context: "The model receives data from two out of three parallel calls, and must wait for the last call to return its output."
- vars:
    functions: file://scenarios/simple-parallel-calls/functions.md
    message: file://scenarios/simple-parallel-calls/outputs/01-remaining-results.md
    raw: true
  assert:
    - type: javascript
      value: file://scripts/utilities.js:findFunctionCalls
    - type: javascript
      value: file://scripts/utilities.js:findFunctionOutputs
    - type: llm-rubric
      value: The response must provide a comprehensive, user-friendly summary of the customer's profile using all the merged data.
  metadata:
    conversationId: simple-parallel-calls
    parameters:
      - [no-hallucination]
      - [no-hallucination]
      - [context-understanding]
    context: "With the all three outputs available, the model's task is to present this comprehensive information to the user in a structured and easy-to-understand summary."
